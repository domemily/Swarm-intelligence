clc
clear all
%% 参数初始化
number_tar = 5; %目标个数
n=30; %机器人个数
m=50; %迭代步数
d=1; %排斥力作用范围
r=0.5; 
ave=0.6283;
%% 初始化结构体
z=zeros(n,4,m);
gradient=zeros(n,2,m);
datax=zeros(n,n);
datay=zeros(n,n);
odatax=zeros(n,1);
odatay=zeros(n,1);
wdatax=zeros(n,1);
wdatay=zeros(n,1);
target_position=zeros(3,2,m);
Total_error=zeros(1,m);


%% 给定一个随机的初始条件
% z(:,:,1)=10*rand(n,4)-5;
% z(:,:,1)=split_29;
% z(:,:,1)=initial_30_2;
% z(:,:,1)=beg;
% z(:,:,1) = 2*rand(n,4)-4;

%% 给定圆域外面的点作为初始坐标
alpha = 2*pi*rand(n,1);
R = 4 + 2*rand(n,1);
xx = R.*cos(alpha);
yy = R.*sin(alpha);
B = zeros(n,2);
% plot(xx,yy,'*');
z(:,:,1) = [xx,yy,B];

%% 给定一个特殊的初始条件平行y轴的两条直线
% a=linspace(-4,-4,n/2);aa=linspace(-2,2,n/2);bb=zeros(n,2);
% b=linspace(4,4,n/2);c=a';cc=b';dd=[c;cc];e=[aa';aa'];ee=[dd,e,bb];
% z(:,:,1)=ee;

%% 
% load('C:\Users\zhangshuai\Desktop\beg.mat');
% z(:,:,1)=beg;
%% 计算初始误差值
for ii=1:n
 val_error = z(ii,1,1).^2+z(ii,2,1).^2-4;   %%目标为圆形测试
  Error(ii,1) = val_error^2;
end
  Total_error(1,1) = sum(Error,1);


%% 分裂环境设置
% target=[0 0];    %目标起始位置
% plot(0,0,'bp','markerfacecolor','b','markersize',20)
% hold on

% x=0.32;
% target=[2+x 0;-2-x 0;0 2+x;0 -2-x];     %目标试图离开最大容忍区域区域
% plot(target(:,1),target(:,2),'bd','markerfacecolor','b','markersize',10)
% hold on
%%  门式环境设置
% plot(12,0,'rp','markerfacecolor','r','markersize',10); %最终位置为（10,11）
% hold on
% plot(8,0,'kp','markersize',10); %障碍物初始位置为（10,11）
% hold on
% % %  hold on
% % hold on
%  rectangle('Position',[7.9,2,0.2,4],'facecolor','b');    %第三个门式tunnel
%  hold on
%  rectangle('Position',[7.9,-6,0.2,4],'facecolor','b'); 
%   hold on
%   line([8,12],[0,0]);   
%   hold on

%% 仿真环境设置1
 
% x=0:0.01:20;             
% y=-6*sin(0.1*pi*x)+16;
% plot(x,y,'b');
% hold on  
% 
% line([20,24],[16,16]);         %分裂过程
% line([24,30],[16,19]);
% line([24,30],[16,13]);
% hold on
% 
% plot([30 30],[19 13],'b.','markerfacecolor','b','markersize',20); %猎物初始位置为（10，16）和（11,16）
% hold on
% 
% 
% alpha=0:0.01:2*pi;
% RC=2;
% xc=RC*cos(alpha)+2;
% yc=RC*sin(alpha)+0;
% plot(xc,yc,'-b');
% hold on
 plot([2 -2],[0 -0],'bo','markerfacecolor','b','markersize',15); %障碍物初始位置为（20,24）
 hold on 
  plot(0,0,'b^','markerfacecolor','b','markersize',8); %障碍物初始位置为（20,24）
 hold on 
% %  rectangle('Position',[30,8,1,16],'facecolor','b'); 
% %  rectangle('Position',[30,8,1,16],'facecolor','b'); 
%  
%  
% rectangle('Position',[30,15.5,5,1],'facecolor','b');      %墙壁设置为水平的，刺激分裂（28,15）
% % 
% 
%% 仿真环境设置2
% x=0:0.01:10;             % 第一阶段弧形逃跑
% y=-6*sin(0.1*pi*x)+16;
% plot(x,y,'b');
% hold on 
% 
% line([10,36],[16,16]);         %直线与分裂
% line([36,36],[16,20]);
% line([36,36],[16,12]);
% line([36 40],[16 16]);
% hold on
% 
% plot([27.5 28.5 29.5],[16 16 16],'b.','markerfacecolor','b','markersize',20); %猎物初始位置为（10，16）和（11,16）
% hold on
% 
% 
% % alpha=0:0.01:2*pi;
% % RC=2;
% % xc=RC*cos(alpha)+10;
% % yc=RC*sin(alpha)+11;
% % plot(xc,yc,'-b');
% % hold on
% %  plot(10,11,'r^','markerfacecolor','r','markersize',10); %障碍物初始位置为（10,11）
% %  hold on 
%  
%  rectangle('Position',[16,13,8,1],'facecolor','b');    %第二个长tunnel
%  rectangle('Position',[16,18,8,1],'facecolor','b'); 
%  
%  rectangle('Position',[4,12,2,1],'facecolor','b');    %第一个短tunnel
%  rectangle('Position',[4,7,2,1],'facecolor','b'); 
%  
%  rectangle('Position',[28,6,1,8],'facecolor','b');    %第三个门式tunnel
%  rectangle('Position',[28,18,1,8],'facecolor','b'); 
%  
% % rectangle('Position',[32,11,5,1],'facecolor','b');      %单墙壁设置  
% rectangle('Position',[40,12,1,8],'facecolor','b');      %


%% 仿真环境设置3

% x=0:0.01:10;             % 第一阶段弧形逃跑
% y=-6*sin(0.1*pi*x)+16;
% plot(x,y,'b');
% hold on 
% 
% line([10,36],[16,16]);         %直线与分裂
% % line([36,36],[16,20]);
% % line([36,36],[16,12]);
% % line([36 40],[16 16]);
% hold on
% 
% % %猎物位置
% % plot([27.5 28.5 29.5],[16 16 16],'b.','markerfacecolor','b','markersize',20); 
% % hold on
% 
% %猎物位置
% plot(34,16,'b.','markerfacecolor','b','markersize',20); 
% hold on
% 
% % z(:,:,1)=robot_32;  % 上一时刻机器人位置
% 
% alpha=0:0.01:2*pi;
% RC=r;
% xc=RC*cos(alpha)+10;
% yc=RC*sin(alpha)+10;
% plot(xc,yc,'-b');
% hold on
% plot(10,10,'r^','markerfacecolor','r','markersize',10);  %障碍物初始位置为（10,11）
% hold on 
% 
% 
% 
%  rectangle('Position',[16,13,8,1],'facecolor','b');    %第二个长tunnel
%  rectangle('Position',[16,18,8,1],'facecolor','b'); 
%  
% %  rectangle('Position',[4,12,2,1],'facecolor','b');    %第一个短tunnel
% %  rectangle('Position',[4,7,2,1],'facecolor','b'); 
%  
%  rectangle('Position',[28,6,1,8],'facecolor','b');    %第三个门式tunnel
%  rectangle('Position',[28,18,1,8],'facecolor','b'); 
%  
% % % rectangle('Position',[32,11,5,1],'facecolor','b');      %单墙壁设置  
% % rectangle('Position',[40,12,1,8],'facecolor','b');      %
for jj=2:1:m
%% 每一个循环开始前先计算期望间距
% d = 0.34 + (1.02-0.34)*(jj/m);   % 期望间距线性增加
 
%% 目标图形对于个体而言都是一致的，所以不需要参与ii的循环  
%  t_trapping=0.1*(jj-1);  %% 个体的运动速度为1m/s   每一个jj循环是0.2s的实际数据监测
%  I = [4*t_trapping 2*sin(t_trapping);3*t_trapping -t_trapping+(0.5*rand()-0.25);3*t_trapping t_trapping+(0.5*rand()-0.25)];
%  target_position(:,:,jj-1)=I;
% [zix,ziy,f]=myfun_zixziy(I);
%% 静态围捕 手动更改

%% 仿真设置为垂直方向逃亡的三个个体
%  t_trapping=0.1*(jj-1);  %% 个体的运动速度为1m/s   每一个jj循环是0.2s的实际数据监测
%  I = [0 t_trapping;0 -t_trapping;t_trapping 0];
%  target_position(:,:,jj-1)=I;
% [zix,ziy,f]=myfun_zixziy(I);
%% 求解zix 和ziy以及f 通道仿真
%  t_trapping=4+0.0*(jj-1);  %% 个体的运动速度为0.1m/s   每一个jj循环是0.2s的实际数据监测
%  I = [t_trapping 0];
%  target_position(:,:,jj-1)=I;
%  [zix,ziy,f]=myfun_zixziy_piece(I,jj);

%%  个体循环
for ii=1:n
   
    for k=1:n

          if ii==k    %排除自减项，自减会造成分母为0
              datax(ii,k)=0;
              datay(ii,k)=0;
          else
              
          % 邻居定义为平面坐标距离小于d的个体：
          dij=sqrt((z(k,1,jj-1)-z(ii,1,jj-1))^2+(z(k,2,jj-1)-z(ii,2,jj-1))^2);  
          if dij<d
%              
            valx=(z(ii,1,jj-1)-z(k,1,jj-1))/dij^1;
            valy=(z(ii,2,jj-1)-z(k,2,jj-1))/dij^1;
%             
%             valx=2*(z(ii,1,jj-1)-z(k,1,jj-1))/dij*(dij^2-d0)/dij^3;
%             valy=2*(z(ii,2,jj-1)-z(k,2,jj-1))/dij*(dij^2-d0)/dij^3;
            
%              valx=-2*(z(ii,1,jj-1)-z(k,1,jj-1))/dij^4;
%              valy=-2*(z(ii,2,jj-1)-z(k,2,jj-1))/dij^4;
% %             
      
          
            datax(ii,k)=valx;
            datay(ii,k)=valy;
          else
            datax(ii,k)=0;
            datay(ii,k)=0;
          end
          end
    
    end
        dix=sum(datax,2);
        diy=sum(datay,2);
        
        
   %% 程序执行遇到单障碍物重新调节-坐标（10,10）--------------------------------------
%            dio=sqrt((z(ii,1,jj-1)-10)^2+(z(ii,2,jj-1)-10)^2);
%         if dio<r+d;
%             ovalx=(z(ii,1,jj-1)-10)/dio;
%             ovaly=(z(ii,2,jj-1)-10)/dio;
%             odatax(ii,1)=ovalx;
%             odatay(ii,1)=ovaly;
%         else
%             odatax(ii,1)=0;
%             odatay(ii,1)=0;
%         end
%         odix=sum(odatax,2);
%         odiy=sum(odatay,2);
       
        %% 程序执行遇到多障碍物重新调节
           dio1=sqrt((z(ii,1,jj-1)-2)^2+(z(ii,2,jj-1)-0)^2);
           dio2=sqrt((z(ii,1,jj-1)+2)^2+(z(ii,2,jj-1)-0)^2);
        if dio1<r+d;
            ovalx=(z(ii,1,jj-1)-2)/dio1;
            ovaly=(z(ii,2,jj-1)-0)/dio1;
            odatax(ii,1)=ovalx;
            odatay(ii,1)=ovaly;
            
        elseif dio2<r+d;
            ovalx=(z(ii,1,jj-1)+2)/dio2;
            ovaly=(z(ii,2,jj-1)-0)/dio2;
            odatax(ii,2)=ovalx;
            odatay(ii,2)=ovaly;
        else
            odatax(ii,1)=0;
            odatay(ii,1)=0;
            odatax(ii,2)=0;
            odatay(ii,2)=0;
        end
        odix=sum(odatax,2);
        odiy=sum(odatay,2);
        
      %% 程序执行遇到墙壁重新调节-----------------------------------------
%            diw=sqrt((z(ii,1,jj-1)-40)^2);
%         if diw<d;
%             wvalx=(z(ii,1,jj-1)-40)/diw;
%             wvaly=0;
%             wdatax(ii,1)=wvalx;
%             wdatay(ii,1)=wvaly;
%         else
%             wdatax(ii,1)=0;
%             wdatay(ii,1)=0;
%         end
%         wdix=sum(wdatax,2);
%         wdiy=sum(wdatay,2);
      

%% 基因调控网络模型运算

%%
     x0 = [z(ii,1,jj-1),z(ii,2,jj-1),z(ii,3,jj-1),z(ii,4,jj-1)];

     t0=0.05*(jj-1):0.05:0.05*jj;   %收敛速度太慢 怎么才能最快的收敛到目标图形上？


%%  执行隐函数画图程序

% 动态情况下 要加入zix和ziy的求解, 注意在myfun_GRN_trapping 中加入zix 和 ziy两项
% [t,x]=ode45('myfun_GRN_trapping',t0,x0,[],dix(ii),diy(ii),wdix(ii),wdiy(ii),zix,ziy);


% 静态环境下 不需要求解zix ziy
[t,x]=ode45('myfun_GRN_trapping_static',t0,x0,[],dix(ii),diy(ii),odix(ii),odiy(ii));
   
     
     %执行画圆程序
%       xx=34;yy=16;R=4;
%      [t,x]=ode45('myfun_circle_ii_xxyy',t0,x0,[],dix(ii),diy(ii),xx,yy,R,odix(ii),odiy(ii),wdix(ii),wdiy(ii));

    val1=x(end,1); 
    val2=x(end,2);
    val3=x(end,3);
    val4=x(end,4);
%     
%     syms p q 
%     val5=subs(zix,{p,q},{val1+0*val3,val2+0*val4});
%     val6=subs(ziy,{p,q},{val1+0*val3,val2+0*val4});
%     
%     gradient(ii,1,jj)=val5;
%     gradient(ii,2,jj)=val6;
%     
%    val_grad=sqrt(gradient(ii,1,jj)^2+gradient(ii,2,jj)^2);
%    grad(ii,jj)=val_grad;
%    Total_grad=sum(grad,1);
    
  
 
    z(ii,1,jj)=val1;
    z(ii,2,jj)=val2;
    z(ii,3,jj)=val3;
    z(ii,4,jj)=val4;
    
     
      
 %% 计算是否在目标图形上
 
  
  %% 下面f只是在静态围捕时候对不变目标图形的描述
%    syms p q
% 静态仿真条件2
% f = log((q + 3)^2 + p^2)*((3717804848893897*(q + 3)^2)/36028797018963968 + (3717804848893897*p^2)/36028797018963968) - log((q - 2)^2 + p^2)*((3678916375312215*(q - 2)^2)/9007199254740992 + (3678916375312215*p^2)/9007199254740992) + log((q + 2)^2 + p^2)*((5582798126936243*(q + 2)^2)/18014398509481984 + (5582798126936243*p^2)/18014398509481984) - log((p + 2^(1/2))^2 + (q + 2^(1/2))^2)*((393132877987855*(p + 2^(1/2))^2)/1125899906842624 + (393132877987855*(q + 2^(1/2))^2)/1125899906842624) + log((p - 1)^2 + (q - 1)^2)*((1200804823190509*(p - 1)^2)/9007199254740992 + (1200804823190509*(q - 1)^2)/9007199254740992) + log((p + 1)^2 + (q - 1)^2)*((1200804823190511*(p + 1)^2)/9007199254740992 + (1200804823190511*(q - 1)^2)/9007199254740992) + log((p - 3844062731816691/2251799813685248)^2 + (q - 3844062731816691/2251799813685248)^2)*((5526246206831461*(p - 3844062731816691/2251799813685248)^2)/36028797018963968 + (5526246206831461*(q - 3844062731816691/2251799813685248)^2)/36028797018963968) - log((q + 2^(1/2))^2 + (p - 2^(1/2))^2)*((3145063023902839*(q + 2^(1/2))^2)/9007199254740992 + (3145063023902839*(p - 2^(1/2))^2)/9007199254740992) + log((p + 3844062731816691/2251799813685248)^2 + (q - 3844062731816691/2251799813685248)^2)*((2763123103415731*(p + 3844062731816691/2251799813685248)^2)/18014398509481984 + (2763123103415731*(q - 3844062731816691/2251799813685248)^2)/18014398509481984);
% 静态仿真条件3
% f = log((p - 8/5)^2 + (q - 9/5)^2)*((4450192366097453*(p - 8/5)^2)/72057594037927936 + (4450192366097453*(q - 9/5)^2)/72057594037927936) - log((q + 4)^2 + p^2)*((6748617341728975*(q + 4)^2)/72057594037927936 + (6748617341728975*p^2)/72057594037927936) + log((p - 1)^2 + (q - 1)^2)*((3060517184830343*(p - 1)^2)/9007199254740992 + (3060517184830343*(q - 1)^2)/9007199254740992) + log((p + 8/5)^2 + (q - 9/5)^2)*((1112548091524361*(p + 8/5)^2)/18014398509481984 + (1112548091524361*(q - 9/5)^2)/18014398509481984) + log((q + 3)^2 + p^2)*((4525188994582225*(q + 3)^2)/9007199254740992 + (4525188994582225*p^2)/9007199254740992) + log((p + 1)^2 + (q - 1)^2)*((6121034369660677*(p + 1)^2)/18014398509481984 + (6121034369660677*(q - 1)^2)/18014398509481984) - log((q - 5/3)^2 + p^2)*((5419212569722201*(q - 5/3)^2)/9007199254740992 + (5419212569722201*p^2)/9007199254740992) - log((p + 6/5)^2 + (q + 29/15)^2)*((2982712687498879*(p + 6/5)^2)/9007199254740992 + (2982712687498879*(q + 29/15)^2)/9007199254740992) - log((p - 6/5)^2 + (q + 29/15)^2)*((2982712687498881*(p - 6/5)^2)/9007199254740992 + (2982712687498881*(q + 29/15)^2)/9007199254740992);
% % 静态仿真条件4
% f = log((p - 3)^2 + (q + 2)^2)*((5754069591571453*(p - 3)^2)/18014398509481984 + (5754069591571453*(q + 2)^2)/18014398509481984) - log((p - 2509704184906261/4503599627370496)^2 + (q + (6*13^(1/2))/13)^2)*((8722248605890491*(p - 2509704184906261/4503599627370496)^2)/36028797018963968 + (8722248605890491*(q + (6*13^(1/2))/13)^2)/36028797018963968) - log((p + 2)^2 + q^2)*((775656146388575*(p + 2)^2)/9007199254740992 + (775656146388575*q^2)/9007199254740992) - log((p - 11/3)^2 + q^2)*((5059529695416721*(p - 11/3)^2)/18014398509481984 + (5059529695416721*q^2)/18014398509481984) - log((p - 2509704184906261/4503599627370496)^2 + (q - (6*13^(1/2))/13)^2)*((8722248605890481*(p - 2509704184906261/4503599627370496)^2)/36028797018963968 + (8722248605890481*(q - (6*13^(1/2))/13)^2)/36028797018963968) + log((p + 1)^2 + q^2)*((2887990520644761*(p + 1)^2)/9007199254740992 + (2887990520644761*q^2)/9007199254740992) - log((q - 797151290642151/281474976710656)^2 + (p - 8004473239566885/2251799813685248)^2)*((2663551530295575*(q - 797151290642151/281474976710656)^2)/36028797018963968 + (2663551530295575*(p - 8004473239566885/2251799813685248)^2)/36028797018963968) - log((q + 797151290642151/281474976710656)^2 + (p - 8004473239566885/2251799813685248)^2)*((2663551530295607*(q + 797151290642151/281474976710656)^2)/36028797018963968 + (2663551530295607*(p - 8004473239566885/2251799813685248)^2)/36028797018963968) + log((p - 3)^2 + (q - 2)^2)*((2877034795785713*(p - 3)^2)/9007199254740992 + (2877034795785713*(q - 2)^2)/9007199254740992);
%% 扩展静态仿真
% static_5_2
% f =log((p - 26150480032161/140737488355328)^2 + (q - 601028045952409/1125899906842624)^2)*((4001982937571039*(p - 26150480032161/140737488355328)^2)/18014398509481984 + (4001982937571039*(q - 601028045952409/1125899906842624)^2)/18014398509481984) + log((p + 2405774733601883/1125899906842624)^2 + (q + 5498548666029181/2251799813685248)^2)*((4028419218340987*(p + 2405774733601883/1125899906842624)^2)/36028797018963968 + (4028419218340987*(q + 5498548666029181/2251799813685248)^2)/36028797018963968) + log((q + 2401540785161737/2251799813685248)^2 + (p - 1469069824672629/1125899906842624)^2)*((3436828195102247*(q + 2401540785161737/2251799813685248)^2)/18014398509481984 + (3436828195102247*(p - 1469069824672629/1125899906842624)^2)/18014398509481984) - log((q + 6061655252819847/2251799813685248)^2 + (p - 7650870590633679/9007199254740992)^2)*((7234954047922041*(q + 6061655252819847/2251799813685248)^2)/36028797018963968 + (7234954047922041*(p - 7650870590633679/9007199254740992)^2)/36028797018963968) - log((p + 406092668128363/281474976710656)^2 + (q - 5280039343439899/9007199254740992)^2)*((1946346493920109*(p + 406092668128363/281474976710656)^2)/9007199254740992 + (1946346493920109*(q - 5280039343439899/9007199254740992)^2)/9007199254740992) - log((p + 94196792571825/70368744177664)^2 + (q + 4141903070331413/2251799813685248)^2)*((1633644629680559*(p + 94196792571825/70368744177664)^2)/36028797018963968 + (1633644629680559*(q + 4141903070331413/2251799813685248)^2)/36028797018963968) + log((q - 6712916833323185/4503599627370496)^2 + (p - 4294021605863309/9007199254740992)^2)*((1676518295920969*(q - 6712916833323185/4503599627370496)^2)/9007199254740992 + (1676518295920969*(p - 4294021605863309/9007199254740992)^2)/9007199254740992) - log((p - 5852984722252979/4503599627370496)^2 + (q - 2739747863324793/18014398509481984)^2)*((330020733128381*(p - 5852984722252979/4503599627370496)^2)/562949953421312 + (330020733128381*(q - 2739747863324793/18014398509481984)^2)/562949953421312) + log((p - 10136440960247/4398046511104)^2 + (q + 4841442936996197/4503599627370496)^2)*((6656164506136279*(p - 10136440960247/4398046511104)^2)/36028797018963968 + (6656164506136279*(q + 4841442936996197/4503599627370496)^2)/36028797018963968);
% static_5_3
% f =log((q + 5315520496830497/4503599627370496)^2 + (p - 102814015070119/70368744177664)^2)*((4739477833860431*(q + 5315520496830497/4503599627370496)^2)/4503599627370496 + (4739477833860431*(p - 102814015070119/70368744177664)^2)/4503599627370496) + log((q + 2432969909209925/4503599627370496)^2 + (p - 3119849615892437/4503599627370496)^2)*((3290762972317223*(q + 2432969909209925/4503599627370496)^2)/36028797018963968 + (3290762972317223*(p - 3119849615892437/4503599627370496)^2)/36028797018963968) - log((p + 8987229118914659/4503599627370496)^2 + (q + 5181022367871669/9007199254740992)^2)*((458025640055081*(p + 8987229118914659/4503599627370496)^2)/1125899906842624 + (458025640055081*(q + 5181022367871669/9007199254740992)^2)/1125899906842624) + log((p - 4287118863588187/2251799813685248)^2 + (q - 407814520455293/562949953421312)^2)*((4816097844964315*(p - 4287118863588187/2251799813685248)^2)/4503599627370496 + (4816097844964315*(q - 407814520455293/562949953421312)^2)/4503599627370496) - log((q - 4747096726876503/2251799813685248)^2 + (p - 4541363790569591/18014398509481984)^2)*((5051879228204965*(q - 4747096726876503/2251799813685248)^2)/18014398509481984 + (5051879228204965*(p - 4541363790569591/18014398509481984)^2)/18014398509481984) - log((p - 2609654561285855/4503599627370496)^2 + (q - 1029850019939769/1125899906842624)^2)*((400236638520897*(p - 2609654561285855/4503599627370496)^2)/18014398509481984 + (400236638520897*(q - 1029850019939769/1125899906842624)^2)/18014398509481984) + log((q - 7863788980792909/9007199254740992)^2 + (p + 4285403842470393/2251799813685248)^2)*((147928034036705*(q - 7863788980792909/9007199254740992)^2)/281474976710656 + (147928034036705*(p + 4285403842470393/2251799813685248)^2)/281474976710656) - log((q - 1851281428506593/2251799813685248)^2 + (p + 1255307553934959/2251799813685248)^2)*((2640236632312769*(q - 1851281428506593/2251799813685248)^2)/18014398509481984 + (2640236632312769*(p + 1255307553934959/2251799813685248)^2)/18014398509481984) + log((p + 838727116406181/562949953421312)^2 + (q + 1812289490118653/1125899906842624)^2)*((1281239243160121*(p + 838727116406181/562949953421312)^2)/2251799813685248 + (1281239243160121*(q + 1812289490118653/1125899906842624)^2)/2251799813685248) - log((p - 4123688735075597/2251799813685248)^2 + (q + 4470183616151363/18014398509481984)^2)*((6766645084821707*(p - 4123688735075597/2251799813685248)^2)/9007199254740992 + (6766645084821707*(q + 4470183616151363/18014398509481984)^2)/9007199254740992) - log((q + 1651540606090319/1125899906842624)^2 + (p - 2374346947878375/2251799813685248)^2)*((1321192857552641*(q + 1651540606090319/1125899906842624)^2)/1125899906842624 + (1321192857552641*(p - 2374346947878375/2251799813685248)^2)/1125899906842624) + log((p - 8231219507090767/18014398509481984)^2 + (q + 1804605750647761/1125899906842624)^2)*((2987906176515405*(p - 8231219507090767/18014398509481984)^2)/4503599627370496 + (2987906176515405*(q + 1804605750647761/1125899906842624)^2)/4503599627370496) - log((q - 6295026833516671/4503599627370496)^2 + (p + 950633813023555/562949953421312)^2)*((1225248806270697*(q - 6295026833516671/4503599627370496)^2)/2251799813685248 + (1225248806270697*(p + 950633813023555/562949953421312)^2)/2251799813685248) - log((p - 1781701486764883/1125899906842624)^2 + (q - 82934684653409/70368744177664)^2)*((837380668431281*(p - 1781701486764883/1125899906842624)^2)/562949953421312 + (837380668431281*(q - 82934684653409/70368744177664)^2)/562949953421312) + log((p - 1060767118393987/1125899906842624)^2 + (q - 2028262340347477/4503599627370496)^2)*((4756754042401579*(p - 1060767118393987/1125899906842624)^2)/36028797018963968 + (4756754042401579*(q - 2028262340347477/4503599627370496)^2)/36028797018963968) + log((p + 3950544602128357/4503599627370496)^2 + (q + 922457138724641/1125899906842624)^2)*((474437988565509*(p + 3950544602128357/4503599627370496)^2)/4503599627370496 + (474437988565509*(q + 922457138724641/1125899906842624)^2)/4503599627370496) - log((p + 1101177188867741/1125899906842624)^2 + (q - 2221330456657269/4503599627370496)^2)*((3489730781322567*(p + 1101177188867741/1125899906842624)^2)/36028797018963968 + (3489730781322567*(q - 2221330456657269/4503599627370496)^2)/36028797018963968) - log((p + 5889776435573803/9007199254740992)^2 + (q + 8039683641773559/4503599627370496)^2)*((5189530608107911*(p + 5889776435573803/9007199254740992)^2)/9007199254740992 + (5189530608107911*(q + 8039683641773559/4503599627370496)^2)/9007199254740992) + log((q - 3715821304683871/2251799813685248)^2 + (p - 353820181316857/281474976710656)^2)*((3855425476517551*(q - 3715821304683871/2251799813685248)^2)/4503599627370496 + (3855425476517551*(p - 353820181316857/281474976710656)^2)/4503599627370496) + log((p + 153614905969703/140737488355328)^2 + (q - 7510198204813677/4503599627370496)^2)*((843288526083459*(p + 153614905969703/140737488355328)^2)/2251799813685248 + (843288526083459*(q - 7510198204813677/4503599627370496)^2)/2251799813685248) - log((q + 2948916488764675/4503599627370496)^2 + (p - 624722976794229/4503599627370496)^2)*((3728835526544005*(q + 2948916488764675/4503599627370496)^2)/18014398509481984 + (3728835526544005*(p - 624722976794229/4503599627370496)^2)/18014398509481984);

%% 五个静态仿真
%    syms p q
% static_1 （目标圆的误差变化）
 val_error= z(ii,1,jj)^2+z(ii,2,jj)^2-4;
 Error(ii,jj) = val_error^2;
 Total_error = sum(Error,1);
% static_2
% f = log((p - 1006715709395363/562949953421312)^2 + (q - 4004768358786193/18014398509481984)^2)*((5213332011945347*(p - 1006715709395363/562949953421312)^2)/18014398509481984 + (5213332011945347*(q - 4004768358786193/18014398509481984)^2)/18014398509481984) + log((q + 4991400864249567/2251799813685248)^2 + (p - 4682711774123161/288230376151711744)^2)*((1203952943188659*(q + 4991400864249567/2251799813685248)^2)/72057594037927936 + (1203952943188659*(p - 4682711774123161/288230376151711744)^2)/72057594037927936) - log((q + 1002914222857873/1125899906842624)^2 + (p - 91445768463305/4503599627370496)^2)*((4955629994824579*(q + 1002914222857873/1125899906842624)^2)/72057594037927936 + (4955629994824579*(p - 91445768463305/4503599627370496)^2)/72057594037927936) + log((q + 3589063659729283/4503599627370496)^2 + (p + 1450558294867421/4503599627370496)^2)*((679024252680011*(q + 3589063659729283/4503599627370496)^2)/72057594037927936 + (679024252680011*(p + 1450558294867421/4503599627370496)^2)/72057594037927936) - log((p + 888918394242241/562949953421312)^2 + (q + 102244997848477/562949953421312)^2)*((7097173041788043*(p + 888918394242241/562949953421312)^2)/36028797018963968 + (7097173041788043*(q + 102244997848477/562949953421312)^2)/36028797018963968) + log((q - 968713655894383/1125899906842624)^2 + (p + 4281239117968409/2251799813685248)^2)*((4691539763718367*(q - 968713655894383/1125899906842624)^2)/36028797018963968 + (4691539763718367*(p + 4281239117968409/2251799813685248)^2)/36028797018963968) - log((p - 2428444412729009/2251799813685248)^2 + (q - 723514672517431/562949953421312)^2)*((2370613633145205*(p - 2428444412729009/2251799813685248)^2)/18014398509481984 + (2370613633145205*(q - 723514672517431/562949953421312)^2)/18014398509481984) - log((q + 1937880603747877/2251799813685248)^2 + (p - 3767130360123077/2251799813685248)^2)*((840296974194129*(q + 1937880603747877/2251799813685248)^2)/4503599627370496 + (840296974194129*(p - 3767130360123077/2251799813685248)^2)/4503599627370496) - log((q - 4589953893073193/4503599627370496)^2 + (p + 726432641117029/562949953421312)^2)*((1333708001826539*(q - 4589953893073193/4503599627370496)^2)/36028797018963968 + (1333708001826539*(p + 726432641117029/562949953421312)^2)/36028797018963968) + log((p - 6656776096024773/18014398509481984)^2 + (q + 4115856438915035/2251799813685248)^2)*((1965788656885343*(p - 6656776096024773/18014398509481984)^2)/18014398509481984 + (1965788656885343*(q + 4115856438915035/2251799813685248)^2)/18014398509481984) - log((p - 1830102214833885/2251799813685248)^2 + (q - 5777727423949/2251799813685248)^2)*((1190499354276191*(p - 1830102214833885/2251799813685248)^2)/9007199254740992 + (1190499354276191*(q - 5777727423949/2251799813685248)^2)/9007199254740992) - log((p + 8835302633512895/18014398509481984)^2 + (q + 8028369935386105/4503599627370496)^2)*((5469138892886567*(p + 8835302633512895/18014398509481984)^2)/36028797018963968 + (5469138892886567*(q + 8028369935386105/4503599627370496)^2)/36028797018963968) + log((p + 6709199458798133/4503599627370496)^2 + (q + 2005233522514617/1125899906842624)^2)*((7961103533746715*(p + 6709199458798133/4503599627370496)^2)/72057594037927936 + (7961103533746715*(q + 2005233522514617/1125899906842624)^2)/72057594037927936) + log((q - 1161243604147431/4503599627370496)^2 + (p + 1445734386539361/2251799813685248)^2)*((201539449806059*(q - 1161243604147431/4503599627370496)^2)/36028797018963968 + (201539449806059*(p + 1445734386539361/2251799813685248)^2)/36028797018963968) - log((q + 245773247475425/1125899906842624)^2 + (p + 2610776002004743/4503599627370496)^2)*((1483115594282693*(q + 245773247475425/1125899906842624)^2)/18014398509481984 + (1483115594282693*(p + 2610776002004743/4503599627370496)^2)/18014398509481984);
% static_3
%  f = log((p - 1978790549910391/1125899906842624)^2 + (q + 529459850039581/562949953421312)^2)*((8774483132189725*(p - 1978790549910391/1125899906842624)^2)/144115188075855872 + (8774483132189725*(q + 529459850039581/562949953421312)^2)/144115188075855872) - log((p - 6166876751659317/2251799813685248)^2 + (q + 2533532839365261/9007199254740992)^2)*((1794940075685627*(p - 6166876751659317/2251799813685248)^2)/4503599627370496 + (1794940075685627*(q + 2533532839365261/9007199254740992)^2)/4503599627370496) - log((q - 51127106987583/35184372088832)^2 + (p - 7243460531331147/9007199254740992)^2)*((2636079552403407*(q - 51127106987583/35184372088832)^2)/18014398509481984 + (2636079552403407*(p - 7243460531331147/9007199254740992)^2)/18014398509481984) + log((q + 1471386841395513/1125899906842624)^2 + (p - 3026417132984029/1125899906842624)^2)*((7208327558676873*(q + 1471386841395513/1125899906842624)^2)/36028797018963968 + (7208327558676873*(p - 3026417132984029/1125899906842624)^2)/36028797018963968) - log((q - 214191531236693/2251799813685248)^2 + (p - 3612408469173429/2251799813685248)^2)*((1626261193075957*(q - 214191531236693/2251799813685248)^2)/72057594037927936 + (1626261193075957*(p - 3612408469173429/2251799813685248)^2)/72057594037927936) - log((q + 5171693214834627/2251799813685248)^2 + (p + 7611638750154567/36028797018963968)^2)*((293311383234251*(q + 5171693214834627/2251799813685248)^2)/562949953421312 + (293311383234251*(p + 7611638750154567/36028797018963968)^2)/562949953421312) + log((p - 5408278752499631/2251799813685248)^2 + (q - 1572665795394385/2251799813685248)^2)*((1292896807373011*(p - 5408278752499631/2251799813685248)^2)/4503599627370496 + (1292896807373011*(q - 1572665795394385/2251799813685248)^2)/4503599627370496) + log((q - 705804297823511/9007199254740992)^2 + (p + 2279323702786527/2251799813685248)^2)*((3398854853511067*(q - 705804297823511/9007199254740992)^2)/18014398509481984 + (3398854853511067*(p + 2279323702786527/2251799813685248)^2)/18014398509481984) - log((q + 2544527609013677/1125899906842624)^2 + (p + 4416028388283179/2251799813685248)^2)*((3443029384963*(q + 2544527609013677/1125899906842624)^2)/2251799813685248 + (3443029384963*(p + 4416028388283179/2251799813685248)^2)/2251799813685248) - log((q + 1319744243352297/1125899906842624)^2 + (p + 643604143318867/562949953421312)^2)*((2866421452425273*(q + 1319744243352297/1125899906842624)^2)/2251799813685248 + (2866421452425273*(p + 643604143318867/562949953421312)^2)/2251799813685248) + log((p + 39020593653777/562949953421312)^2 + (q + 35844668766775/140737488355328)^2)*((1423384415750781*(p + 39020593653777/562949953421312)^2)/9007199254740992 + (1423384415750781*(q + 35844668766775/140737488355328)^2)/9007199254740992) + log((q + 1943946261044739/1125899906842624)^2 + (p + 1255673580337871/1125899906842624)^2)*((6034196811296643*(q + 1943946261044739/1125899906842624)^2)/4503599627370496 + (6034196811296643*(p + 1255673580337871/1125899906842624)^2)/4503599627370496);
% static_4
%  f = log((q + 145432776202299/281474976710656)^2 + (p + 4629080406225867/4503599627370496)^2)*((356319277742425*(q + 145432776202299/281474976710656)^2)/1125899906842624 + (356319277742425*(p + 4629080406225867/4503599627370496)^2)/1125899906842624) - log((q - 636561759547273/1125899906842624)^2 + (p + 1132692899722453/562949953421312)^2)*((4602170393665841*(q - 636561759547273/1125899906842624)^2)/9007199254740992 + (4602170393665841*(p + 1132692899722453/562949953421312)^2)/9007199254740992) + log((p - 587849232672093/1125899906842624)^2 + (q - 1672690881062899/562949953421312)^2)*((5801921260902033*(p - 587849232672093/1125899906842624)^2)/18014398509481984 + (5801921260902033*(q - 1672690881062899/562949953421312)^2)/18014398509481984) - log((q + 8310009686959731/4503599627370496)^2 + (p + 5240914696169071/72057594037927936)^2)*((3936284562865653*(q + 8310009686959731/4503599627370496)^2)/9007199254740992 + (3936284562865653*(p + 5240914696169071/72057594037927936)^2)/9007199254740992) + log((q + 3190790767732563/2251799813685248)^2 + (p - 3207707848810891/1125899906842624)^2)*((8505476566901561*(q + 3190790767732563/2251799813685248)^2)/18014398509481984 + (8505476566901561*(p - 3207707848810891/1125899906842624)^2)/18014398509481984) - log((q - 8898825173212259/4503599627370496)^2 + (p + 3968728521848613/4503599627370496)^2)*((3024635550409429*(q - 8898825173212259/4503599627370496)^2)/9007199254740992 + (3024635550409429*(p + 3968728521848613/4503599627370496)^2)/9007199254740992) - log((p - 4197861691812183/1125899906842624)^2 + (q + 2131348709649415/1125899906842624)^2)*((4635459764688327*(p - 4197861691812183/1125899906842624)^2)/36028797018963968 + (4635459764688327*(q + 2131348709649415/1125899906842624)^2)/36028797018963968) + log((q - 437017370621723/281474976710656)^2 + (p + 5729019701005977/2251799813685248)^2)*((5066420114996971*(q - 437017370621723/281474976710656)^2)/9007199254740992 + (5066420114996971*(p + 5729019701005977/2251799813685248)^2)/9007199254740992) + log((q + 2442201369808103/2251799813685248)^2 + (p + 2084015557589329/1125899906842624)^2)*((675571673188777*(q + 2442201369808103/2251799813685248)^2)/9007199254740992 + (675571673188777*(p + 2084015557589329/1125899906842624)^2)/9007199254740992) + log((q + 2578719355935363/2251799813685248)^2 + (p - 1014107224864535/1125899906842624)^2)*((4496174329639115*(q + 2578719355935363/2251799813685248)^2)/4503599627370496 + (4496174329639115*(p - 1014107224864535/1125899906842624)^2)/4503599627370496) - log((p - 6509842809582099/9007199254740992)^2 + (q - 1112097630065121/281474976710656)^2)*((288849545002629*(p - 6509842809582099/9007199254740992)^2)/2251799813685248 + (288849545002629*(q - 1112097630065121/281474976710656)^2)/2251799813685248) + log((p - 3361773303324925/2251799813685248)^2 + (q + 4393167807919885/2251799813685248)^2)*((5181027377361089*(p - 3361773303324925/2251799813685248)^2)/72057594037927936 + (5181027377361089*(q + 4393167807919885/2251799813685248)^2)/72057594037927936) - log((q - 2299311278196211/1125899906842624)^2 + (p + 7692468791653753/2251799813685248)^2)*((4676226473312233*(q - 2299311278196211/1125899906842624)^2)/36028797018963968 + (4676226473312233*(p + 7692468791653753/2251799813685248)^2)/36028797018963968) - log((p - 2058699367415585/1125899906842624)^2 + (q - 7460390949409581/9007199254740992)^2)*((2320635483250545*(p - 2058699367415585/1125899906842624)^2)/18014398509481984 + (2320635483250545*(q - 7460390949409581/9007199254740992)^2)/18014398509481984) - log((q + 4680272549012643/4503599627370496)^2 + (p - 6979840374528695/4503599627370496)^2)*((1194721967068423*(q + 4680272549012643/4503599627370496)^2)/1125899906842624 + (1194721967068423*(p - 6979840374528695/4503599627370496)^2)/1125899906842624);
% static_5
% f = log((q - 1839569482623545/2251799813685248)^2 + (p + 3142564272232233/2251799813685248)^2)*((6599692446030393*(q - 1839569482623545/2251799813685248)^2)/36028797018963968 + (6599692446030393*(p + 3142564272232233/2251799813685248)^2)/36028797018963968) - log((p - 3074193774192209/2251799813685248)^2 + (q + 3887339163180569/4503599627370496)^2)*((2761285385911639*(p - 3074193774192209/2251799813685248)^2)/4503599627370496 + (2761285385911639*(q + 3887339163180569/4503599627370496)^2)/4503599627370496) + log((q - 5620948938226951/2251799813685248)^2 + (p + 2453185748464109/2251799813685248)^2)*((1394707420647881*(q - 5620948938226951/2251799813685248)^2)/2251799813685248 + (1394707420647881*(p + 2453185748464109/2251799813685248)^2)/2251799813685248) - log((q + 1610367503361769/1125899906842624)^2 + (p - 4527664267033419/18014398509481984)^2)*((270275012686365*(q + 1610367503361769/1125899906842624)^2)/1125899906842624 + (270275012686365*(p - 4527664267033419/18014398509481984)^2)/1125899906842624) + log((p - 2895589898999089/4503599627370496)^2 + (q - 6146314083896065/2251799813685248)^2)*((978556328781249*(p - 2895589898999089/4503599627370496)^2)/2251799813685248 + (978556328781249*(q - 6146314083896065/2251799813685248)^2)/2251799813685248) + log((q - 1942772136145/36028797018963968)^2 + (p - 2342482952623449/1125899906842624)^2)*((1077453111237951*(q - 1942772136145/36028797018963968)^2)/9007199254740992 + (1077453111237951*(p - 2342482952623449/1125899906842624)^2)/9007199254740992) + log((q - 500136345373055/281474976710656)^2 + (p - 190809301473591/562949953421312)^2)*((990949743868635*(q - 500136345373055/281474976710656)^2)/4503599627370496 + (990949743868635*(p - 190809301473591/562949953421312)^2)/4503599627370496) - log((p - 4937751103358673/2251799813685248)^2 + (q + 6364036716447185/2251799813685248)^2)*((628382738828425*(p - 4937751103358673/2251799813685248)^2)/4503599627370496 + (628382738828425*(q + 6364036716447185/2251799813685248)^2)/4503599627370496) + log((q - 558454029197229/2251799813685248)^2 + (p - 2503483129229953/2251799813685248)^2)*((1674579803172889*(q - 558454029197229/2251799813685248)^2)/4503599627370496 + (1674579803172889*(p - 2503483129229953/2251799813685248)^2)/4503599627370496) - log((p + 7618314273050681/4503599627370496)^2 + (q - 1907349245418689/1125899906842624)^2)*((6233861285506451*(p + 7618314273050681/4503599627370496)^2)/9007199254740992 + (6233861285506451*(q - 1907349245418689/1125899906842624)^2)/9007199254740992) + log((p + 698442552949909/1125899906842624)^2 + (q - 908068289841313/562949953421312)^2)*((1868535768554943*(p + 698442552949909/1125899906842624)^2)/9007199254740992 + (1868535768554943*(q - 908068289841313/562949953421312)^2)/9007199254740992) - log((p + 1844007584065185/9007199254740992)^2 + (q - 5720911576231347/2251799813685248)^2)*((3988267441394667*(p + 1844007584065185/9007199254740992)^2)/4503599627370496 + (3988267441394667*(q - 5720911576231347/2251799813685248)^2)/4503599627370496) - log((p - 7487463791531291/4503599627370496)^2 + (q - 7084769693077805/4503599627370496)^2)*((1658773842577639*(p - 7487463791531291/4503599627370496)^2)/4503599627370496 + (1658773842577639*(q - 7084769693077805/4503599627370496)^2)/4503599627370496) + log((p + 5349917907422133/2251799813685248)^2 + (q - 4569514908603267/4503599627370496)^2)*((6088760374403381*(p + 5349917907422133/2251799813685248)^2)/36028797018963968 + (6088760374403381*(q - 4569514908603267/4503599627370496)^2)/36028797018963968) + log((q + 4489963327877705/2251799813685248)^2 + (p - 3689371619720535/2251799813685248)^2)*((314370797815943*(q + 4489963327877705/2251799813685248)^2)/562949953421312 + (314370797815943*(p - 3689371619720535/2251799813685248)^2)/562949953421312);

%% 任意时刻的误差计算
%   val_error= subs(f,{p,q},{z(ii,1,jj),z(ii,2,jj)});
%   Error(ii,jj) = val_error^2;
%   Total_error = sum(Error,1);

  
  
end
fprintf('times: %d \n',jj);
end
   plot(z(:,1,1),z(:,2,1),'or','MarkerSize',6);
   hold on 
   plot(z(:,1,end),z(:,2,end),'or','markerfacecolor','r','markersize',6);
   hold on 
   
%    plot(0,0,'bp','markerfacecolor','b','markersize',20);
%    
%    hold on

%    plot(c(1:2,1),c(1:2,2),'bd','markerfacecolor','b','markersize',10);
%    hold on
   

   xlabel('x/m');
   ylabel('y/m');
   hold on 
   
%    plot([-0.5 0 0 -0.5 0.3],[0 -0.5 0.7 0.5 -0.4],'b^','markerfacecolor','b','markersize',10);

%% 设置坐标轴   
 axis equal
%  axis([-6 6 -5 5]);
%% 绘制轨迹 机器人
aaa=z(:,1,:);
 bbb=z(:,2,:);
 aaa=reshape(aaa,n,m);
 bbb=reshape(bbb,n,m);
 for kk=1:n
  plot(aaa(kk,:),bbb(kk,:),'-g','LineWidth',1,'markerfacecolor','g','markersize',6);
  hold on
 end
%% 绘制目标最终位置
% I= [1*t_trapping sin(t_trapping);0 -t_trapping;0 t_trapping]; % 有一个正弦

% I= [4*t_trapping 0;3*t_trapping -t_trapping;3*t_trapping t_trapping]; %三个直线方向


% plot(I(:,1),I(:,2),'b.','markerfacecolor','b','markersize',20);
%% 保存  .mat文件
% save('E:\SCI 分裂围捕\动态围捕多目标\threerandom16')